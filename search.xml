<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[《MySQL必知必会》笔记]]></title>
    <url>%2F2018%2F12%2F03%2Freading-notes-of-mysql-crash-course%2F</url>
    <content type="text"><![CDATA[计算次序 AND的计算次序高于OR的计算次序 vend_id = 1003 与 prod_price &gt;= 10 先计算，之后再和 vend_id = 1002 进行计算，所以结果为 id = 1002的商品和 id = 1003 且 price &gt;= 10 的商品。 查询区分大小写建表时设置字段区分大小写1234CREATE TABLE t ( a VARCHAR(32) BINARY, b VARCHAR(32)); VARCHAR BINARY以字节存储，大小写敏感 VARCHAR以字符存储，大小写不敏感 1234CREATE TABLE t ( a varchar(32) COLLATE utf8_bin DEFAULT NULL, b varchar(32) DEFAULT NULL) utf8_bin 将字符串以字节存储，大小写敏感 utf8_genera_ci 大小写不敏感 , ci = case insensitive utf8_genera_cs 大小写敏感 , cs = case sensitive 查询时指定大小写敏感1select * from t where a = binary &quot;xxx&quot;; 别名列别名在MySQL中，可以使用ORDER BY，GROUP BY和HAVING子句中的列别名来引用该列 123456789101112131415#将姓和名拼接为全名，并以全名排序select concat(first_name,&apos; &apos;,last_name) as full_name from tb_user order by full_name;#单价*天数 = 总价，总价大于100select order_id,price*day as total from tb_order having total &gt; 100;#选择消费总额大于100的用户select username,sum(price*day) total from tb_order group by username having total &gt; 100; 表别名123select username,price from tb_user as u,tb_order as u where u.id = o.u_id 表别名只在查询过程中使用，不返回给客户端 WHERE和HAVING的差别 WHERE在数据 分组前进行过滤，HAVING在数据分组后进行过滤。这是一个重要的区别，WHERE排除的行不包括在分组中。这可能会改变计算值，从而影响HAVING子句中基于这些值过滤掉的分组 左联结和右联结LEFT OUTER JOIN 表示从左边的表中选择所有行 RIGHT OUTER JOIN 表示从右边的表中选择所有行 1234# 检索所有用户的用户名和订单信息，包含没有下订单的用户select tb_user.username,tb_order.*from tb_user left outer join tb_orderon tb_user.id = tb_order.u_id; INSERT性能单条INSERT语句处理多个插入比多条INSERT语句块 TRUNCATE删除表并重新创建 1TRUNCATE TABLE table_name 重置自增id 使用truncate：truncate table； 使用修改标识：dbcc checkident (‘table_name’ , reseed, new_reseed_value) ;说明：new_reseed_value是设置的当前标识，下次插入则从new_reseed_value+1开始。如果new_reseed_value小于表中当前标识的值，有可能会产生重复key，会产生 2627 号错误信息。用处：此方法不会清空已有数据。适用于大量删除后修改新的标识，但不能比当前表中最大值小。 使用修改表的方法：alter table tablename auto_increment=new 说明：此方法和上面的二方法类似。也不会清空数据，有可能会出现重复key的可能，所以此方法也只适用于清空表之后重置自增id或者大量删除后修改自增id。 引擎类型 MyISAM 性能极高 支持全文搜索 不支持事务处理 MEMORY 功能与MyISAM相同 数据存储在内存，速度快，适合临时表 InnoDB 可靠的事务处理 不支持全文搜索 外键不能跨引擎]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>reading notes</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Tuleap的postfix邮件设置]]></title>
    <url>%2F2018%2F11%2F22%2Ftuleap-postfix-config%2F</url>
    <content type="text"><![CDATA[Tuleap使用postfix作为邮件转发工具，自行搭建邮件服务器比较麻烦，我们可以使用postfix + smtp实现发送邮件的功能，这里以QQ邮箱为例，Gmail、163等同理。 配置main.cf123456789101112131415161718192021$ vim /etc/postfix/main.cf#修改inet_interfaces = localhostinet_interfaces = all#在文件最后添加myhostname = tuleap.example.commyorigin = $mydomainrelayhost = [smtp.qq.com]:587# Enable SASL authenticationsmtp_sasl_auth_enable = yes# Disallow methods that allow anonymous authenticationsmtp_sasl_security_options = noanonymous# Location of sasl_passwdsmtp_sasl_password_maps = hash:/etc/postfix/sasl/sasl_passwd# Enable STARTTLS encryptionsmtp_tls_security_level = encrypt# Location of CA certificatessmtp_tls_CAfile = /etc/postfix/server.pemsmtp_generic_maps = hash:/etc/postfix/generic 配置QQ邮箱SMTP账户生成QQ邮箱smtp服务token 创建账户配置文件 1234$ mkdir /etc/postfix/sasl$ vim /etc/postfix/sasl/sasl_passwd[smtp.qq.com]:587 xxxxxxxx@qq.com:token 创建hash加密文件sasl_passwd.db 1$ postmap /etc/postfix/sasl/sasl_passwd 创建CA证书12345678$ cd /etc/ssl/certs/$ vim Makefile# 修改证书有效期 DAYS 为合适的时间DAYS=xxx$ make server.pem$ mv server.pem /etc/postfix 添加账号映射Tuleap的邮件发信人为noreply@tuleap.example.com QQ邮箱SMTP的发件人为sasl_passwd中设置的账号 账号不同时，QQ邮箱会返回报错mail from address must be same as authorization user 1234$ vim /etc/postfix/generic#在文件最后添加noreply@tuleap.example.com xxxxx@qq.com 测试postfix重启postfix 1$ service postfix restart 登陆tuleap，测试邮件发送功能，如果收不到邮件，查看maillog发送日志排查错误 1$ cat /var/log/maillog]]></content>
      <categories>
        <category>Tuleap</category>
      </categories>
      <tags>
        <tag>tuleap</tag>
        <tag>postfix</tag>
        <tag>mail</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Tuleap的安装]]></title>
    <url>%2F2018%2F11%2F21%2Ftuleap-install%2F</url>
    <content type="text"><![CDATA[系统CentOS 7 关闭SElinux修改selinux配置文件 12345678910111213$ vim /etc/selinux/config# This file controls the state of SELinux on the system.# SELINUX= can take one of these three values:# enforcing - SELinux security policy is enforced.# permissive - SELinux prints warnings instead of enforcing.# disabled - No SELinux policy is loaded.SELINUX=disabled# SELINUXTYPE= can take one of three two values:# targeted - Targeted processes are protected,# minimum - Modification of targeted policy. Only selected processes are protected.# mls - Multi Level Security protection.SELINUXTYPE=targeted 重启服务器 1$ shutdown -r now 验证selinux已关闭 123$ sestatusSELinux status: disabled 安装安装EPEL12$ yum install -y epel-release$ yum install -y centos-release-scl 安装 remi-safe 库1$ yum install -y https://rpms.remirepo.net/enterprise/remi-release-7.rpm 安装 Tuleap 库12345678$ vim /etc/yum.repos.d/Tuleap.repo[Tuleap]name=Tuleapbaseurl=https://ci.tuleap.net/yum/tuleap/rhel/7/dev/$basearchenabled=1gpgcheck=1gpgkey=https://ci.tuleap.net/yum/tuleap/gpg.key 安装 Tuleap12345678$ yum install -y \ rh-mysql57-mysql-server \ tuleap-plugin-agiledashboard \ tuleap-plugin-graphontrackers \ tuleap-theme-burningparrot \ tuleap-theme-flamingparrot \ tuleap-plugin-git \ tuleap-plugin-pullrequest 更多插件安装详见官方插件列表 配置数据库1234$ vim /etc/opt/rh/rh-mysql57/my.cnf.d/rh-mysql57-mysql-server.cnf#在[mysqld]下添加sql-mode=NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION 设置mysql开机自启 1$ systemctl enable rh-mysql57-mysqld 启动mysql 1$ systemctl start rh-mysql57-mysqld 设置mysql密码 1$ scl enable rh-mysql57 "mysqladmin -u root password" 启动 请勿重复执行该命令 12345/usr/share/tuleap/tools/setup.el7.sh \ --configure \ --server-name=tuleap.example.com \ --mysql-server=localhost \ --mysql-password=XXXXX server-name : 本地测试时设为localhost 确保防火墙开放所需端口 Web (TCP/80 &amp; TCP/443) SSH (git, admin): TCP/22 首次登陆登陆Tuleap (例如: tuleap.example.com) 默认的管理员密码在 /root/.tuleap_passwd 中可以找到]]></content>
      <categories>
        <category>Tuleap</category>
      </categories>
      <tags>
        <tag>tuleap</tag>
        <tag>php</tag>
        <tag>agile management</tag>
      </tags>
  </entry>
</search>
